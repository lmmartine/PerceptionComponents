//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef CTEST_PORTFACTORYINTERFACE_HH_
#define CTEST_PORTFACTORYINTERFACE_HH_

// include communication objects
#include <CommObjectRecognitionObjects/CommColorDetection.hh>
#include <CommObjectRecognitionObjects/CommColorDetectionACE.hh>
#include <CommObjectRecognitionObjects/CommObjectRecognitionInformation.hh>
#include <CommObjectRecognitionObjects/CommObjectRecognitionInformationACE.hh>
#include <CommObjectRecognitionObjects/CommObjectRecognitionObjectProperties.hh>
#include <CommObjectRecognitionObjects/CommObjectRecognitionObjectPropertiesACE.hh>
#include <CommObjectRecognitionObjects/CommPoint2d.hh>
#include <CommObjectRecognitionObjects/CommPoint2dACE.hh>

#include <chrono>

// include component's main class
#include "CTest.hh"

// forward declaration
class CTest;

class CTestPortFactoryInterface {
public:
	CTestPortFactoryInterface() { };
	virtual ~CTestPortFactoryInterface() { };

	virtual void initialize(CTest *component, int argc, char* argv[]) = 0;
	virtual int onStartup() = 0;

	virtual Smart::IQueryClientPattern<CommObjectRecognitionObjects::CommColorDetection, CommObjectRecognitionObjects::CommPoint2d,SmartACE::QueryId> * createColorQueryServiceReq() = 0;
	virtual Smart::IQueryClientPattern<CommObjectRecognitionObjects::CommObjectRecognitionInformation, CommObjectRecognitionObjects::CommObjectRecognitionObjectProperties,SmartACE::QueryId> * createObjectRecognitionQueryServiceReq() = 0;
	

	virtual int onShutdown(const std::chrono::steady_clock::duration &timeoutTime=std::chrono::seconds(2)) = 0;
	virtual void destroy() = 0;
};

#endif /* CTEST_PORTFACTORYINTERFACE_HH_ */
